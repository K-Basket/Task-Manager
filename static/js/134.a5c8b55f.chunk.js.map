{"version":3,"file":"static/js/134.a5c8b55f.chunk.js","mappings":"iPAUMA,EAAgB,CACpBC,MAAO,GACPC,SAAU,GACVC,MAAM,GAGFC,GAAcC,EAAAA,EAAAA,IAAO,CACzBJ,OAAOK,EAAAA,EAAAA,MACJC,QACC,iFACA,yBAEDC,WACHN,UAAUI,EAAAA,EAAAA,MACPC,QAAQ,8BAA+B,4BACvCC,aAqEL,EAlEkB,WAChB,IAAAC,GAAmDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3DI,EAAgBF,EAAA,GAAEG,EAAsBH,EAAA,GAY/C,OACEI,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,iBAAkBb,EAClBJ,cAAeA,EACfkB,SATiB,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UAC9BC,QAAQC,IAAIJ,GACZE,GACF,EAM2BG,UAEvBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,aAAa,MAAMC,UAAWC,EAAAA,EAAAA,gBAAuBL,SAAA,EACzDC,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,mBAA0BL,SAAA,EACxCT,EAAAA,EAAAA,KAACe,EAAAA,GAAO,CAACC,GAAG,iBAAiBH,UAAWC,EAAAA,EAAAA,sBAA6BL,SAAC,kBAGtET,EAAAA,EAAAA,KAACe,EAAAA,GAAO,CAACC,GAAG,cAAcH,UAAWC,EAAAA,EAAAA,sBAA6BL,SAAC,eAIrEC,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,oBAA2BL,SAAA,EACzCT,EAAAA,EAAAA,KAAA,OAAKa,UAAWC,EAAAA,EAAAA,qBAA4BL,UAC1CT,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CACJJ,UAAWC,EAAAA,EAAAA,qBACXI,KAAK,QACLC,KAAK,QACLC,YAAY,wBAGhBV,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAAA,EAAAA,qBAA4BL,SAAA,EAC1CT,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CACJJ,UAAWC,EAAAA,EAAAA,qBACXO,GAAG,WACHH,KAAMpB,EAAmB,OAAS,WAClCqB,KAAK,WACLC,YAAY,2BAEdpB,EAAAA,EAAAA,KAAA,OACEa,UAAWC,EAAAA,EAAAA,4BACXQ,IAAI,sBACJC,QA7CW,WACrBxB,GAAwBD,GACxBS,QAAQC,IAAIV,EACd,EA0CoCW,UAExBT,EAAAA,EAAAA,KAAA,OAAKwB,KAAMC,EAAAA,EAAY,uBAI7BzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAY,CACXb,UAAWC,EAAAA,EAAAA,qBACXK,KAAK,WACLQ,UAAU,SAEZ3B,EAAAA,EAAAA,KAAA,UAAQkB,KAAK,SAASL,UAAWC,EAAAA,EAAAA,sBAA6BL,SAAC,mBAMvE,EClFA,EATc,WACZ,OACET,EAAAA,EAAAA,KAAA,WAASa,UAAWC,EAAAA,EAAAA,YAAmBL,UACrCT,EAAAA,EAAAA,KAAA,OAAKa,UAAWC,EAAAA,EAAAA,cAAqBL,UACnCT,EAAAA,EAAAA,KAAC4B,EAAU,OAInB,ECLA,EAHmB,WACjB,OAAO5B,EAAAA,EAAAA,KAAC6B,EAAK,GACf,C","sources":["components/Login/LoginForm.jsx","components/Login/Login.jsx","pages/SignInPage.jsx"],"sourcesContent":["import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport styles from 'styles/index.module.scss';\nimport SvgSprite from 'images/sprite.svg';\n// import authOperations from 'redux/auth/authOperations';\n// import SignInInput from './LoginInput';\n\nconst initialValues = {\n  email: '',\n  password: '',\n  show: false,\n};\n\nconst loginSchema = object({\n  email: string()\n    .matches(\n      /^([a-zA-Z0-9_-]+\\.)*[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n      'Type in correct email'\n    )\n    .required(),\n  password: string()\n    .matches(/^[0-9a-zA-Z!@#$%^&*]{8,64}$/, 'Type in correct password')\n    .required(),\n});\n\nconst LoginForm = () => {\n  const [showHidePassword, changeShowHidePassword] = useState(false);\n\n  const togglePassword = () => {\n    changeShowHidePassword(!showHidePassword);\n    console.log(showHidePassword);\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    console.log(values);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      validationSchema={loginSchema}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\" className={styles.AfWelcomRegForm}>\n        <div className={styles.AfWelcomRegFormNav}>\n          <NavLink to=\"/auth/register\" className={styles.AfWelcomLogFormNavReg}>\n            Registration\n          </NavLink>\n          <NavLink to=\"/auth/login\" className={styles.AfWelcomLogFormNavLog}>\n            Log In\n          </NavLink>\n        </div>\n        <div className={styles.AfWelcomRegFormInCn}>\n          <div className={styles.AfWelcomRegFormWrInp}>\n            <Field\n              className={styles.AfWelcomRegFormInput}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter your email\"\n            />\n          </div>\n          <div className={styles.AfWelcomRegFormWrInp}>\n            <Field\n              className={styles.AfWelcomRegFormInput}\n              id=\"password\"\n              type={showHidePassword ? 'text' : 'password'}\n              name=\"password\"\n              placeholder=\"Confirm your password\"\n            />\n            <svg\n              className={styles.AfWelcomRegFormIconShowPass}\n              alt=\"watch password icon\"\n              onClick={togglePassword}\n            >\n              <use href={SvgSprite + '#icon-eye'} />\n            </svg>\n          </div>\n        </div>\n        <ErrorMessage\n          className={styles.AfWelcomRegFormError}\n          name=\"password\"\n          component=\"div\"\n        />\n        <button type=\"submit\" className={styles.AfWelcomRegFormButton}>\n          Log In Now\n        </button>\n      </Form>\n    </Formik>\n  );\n};\nexport default LoginForm;\n","import SignInForm from './LoginForm';\nimport styles from 'styles/index.module.scss';\nconst Login = () => {\n  return (\n    <section className={styles.AfWelcomReg}>\n      <div className={styles.AfWelcomRegWr}>\n        <SignInForm />\n      </div>\n    </section>\n  );\n};\nexport default Login;\n","import Login from 'components/Login/Login';\n\nconst SignInPage = () => {\n  return <Login />;\n};\nexport default SignInPage;\n"],"names":["initialValues","email","password","show","loginSchema","object","string","matches","required","_useState","useState","_useState2","_slicedToArray","showHidePassword","changeShowHidePassword","_jsx","Formik","validationSchema","onSubmit","values","_ref","resetForm","console","log","children","_jsxs","Form","autoComplete","className","styles","NavLink","to","Field","type","name","placeholder","id","alt","onClick","href","SvgSprite","ErrorMessage","component","SignInForm","Login"],"sourceRoot":""}